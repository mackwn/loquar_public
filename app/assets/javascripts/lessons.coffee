#/FOR TYPING
$(document).on 'turbolinks:load', ->
 #play question audio
  $('#question-container').on 'click','#play-question', (e) ->
    $('#question-audio')[0].currentTime = 0
    $('#question-audio')[0].play()
    return false
  #new multiple choice
  $('#question-container').on 'click', '.mult-choice-option', ->
    $('.mult-choice-option').removeClass 'selected'
    $(this).addClass 'selected'
    selected_word = $(this).text()
    $('#answer_submit').val selected_word
    return
  #NEW SELECT BLANK
  #//Select word you want to input choice for
  $('#question-container').on 'click', '#answer-disp-select-blank .select-word', (event) ->
    $('.select-word').removeClass 'select-word-selected'
    $(this).addClass 'select-word-selected'
    bank_id = $(this).attr('id').charAt(0)
    $('.select-bank').addClass 'select-bank-hide'
    $('#select-bank-' + bank_id).removeClass 'select-bank-hide'
    return
  #//Select the choice you want for given selected word
  $('#question-container').on 'click', '.select-choice', (event) ->
    select_word = $(this).text().trim().replace(/\s+/g, "")
    $('.select-word.select-word-selected').text select_word
    bank_id = $(this).attr('id').charAt(0)
    $('#select-bank-' + bank_id + ' .select-choice').removeClass 'select-choice-selected'
    $(this).addClass 'select-choice-selected'
    $('#answer_submit').val $('#answer-disp-select-blank').text()#.replace(/\s+/g, "")
    #$('#question-container').append((parseInt(bank_id)+1).toString())
    $('#' + (parseInt(bank_id) + 1+'-choice').toString()).click()
    return
 #####NEW TYPE BLANKS
 #on click select div that you want to edit
  $('#question-container').on 'click', '#answer-disp-type-blank .select-word', (event) ->
    #don't erase text if already selected or this is the initial selected 		blank
    if !$(this).hasClass('select-word-selected') or $(this).text() == '___'
      $('.select-word').removeClass 'select-word-selected'
      
      $('.select-word').each ->
        $(this).text $(this).text().trim()
        return
      $('.select-word').attr 'contentEditable', false
      #$(this).removeClass 'select-word'
      #$(this).addClass 'select-word select-word-selected'
      #$('#question-container').append("ent") #TEST LINE!!!!!!!!!!!!!
      $(this).attr 'contentEditable', true
      $(this).html '&nbsp;&nbsp;'
      $(this).focus()
      $(this).addClass 'select-word-selected'
      #make sure cursor is there on click
    return
  #delect and make uneditable if blurred - also update submission on blur
  $('#question-container').on 'blur', '#answer-disp-type-blank .select-word', (event) ->
    $('.select-word').removeClass 'select-word-selected'
    $(this).attr 'contentEditable', false
    $(this).text $(this).text().trim()
    $('#question-container #answer-submit').val $('#answer-disp-type-blank').text()
    if $(this).text().length == 0 
      $(this).text '___'
      #make sure span won't disappear if empty

    
    return
  #prevent entering and makes enter key blur element (or go to next?)
  $('#question-container').on 'keypress', '.select-word.select-word-selected', (e) ->
    if e.which == 13
      #Prevent insertion of a return
      #You could do other things here, for example
      #focus on the next field

      choice_id = (parseInt($(this).attr('id').charAt(0)) + 1).toString()
      if $('#' + choice_id + '-choice').length
        $('#' + choice_id + '-choice').click()
      else
        $(this).blur()
      return false
    return
  #prevent copy and pasting extra characters and getting out all the text
  limit = 50
  $('#question-container').on('keypress', '.select-word.select-word-selected', ->
    @innerHTML.length < limit
  ).on
    'paste': (e) ->
      len = @innerHTML.length
      cp = e.originalEvent.clipboardData.getData('text')
      if len < limit
        @innerHTML += cp.substring(0, limit - len)
      false
    'drop': (e) ->
      e.preventDefault()
      e.stopPropagation()
      return
    'cut': (e) ->
      e.preventDefault()
      return
  
  # ---
  # generated by js2coffee 2.2.0
  



$(document).ready(ready)
$(document).on('page:load', ready)
##don't really know what line 1 and the (pen)ultimate lines do
##but claims to fix a problem: https://stackoverflow.com/questions/17317816/rails-javascript-only-works-after-reload
##although not sure that was ever the problem I was actually having
##everything might have just been the issue with the script
##not triggering for objects not yet on screen